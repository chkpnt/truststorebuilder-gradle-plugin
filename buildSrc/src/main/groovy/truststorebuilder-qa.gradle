plugins {
    id("jacoco")
    id "org.sonarqube"
    id "com.hello2morrow.sonargraph"
}

def setToDefaultIfNotExists(property, defaultValue) {
    if (!project.hasProperty(property)) {
        project.ext.setProperty(property, defaultValue)
    }
}

/***************************
 * JaCoCo
 ***************************/

jacoco {
    toolVersion = "0.8.7"
}

jacocoTestReport {
    reports {
        xml.enabled = true
        html.enabled = true
    }
}

check.dependsOn jacocoTestReport

/*********************************
 * SonarQube
 *********************************/

setToDefaultIfNotExists('sonarqubeToken', '')

sonarqube {
    properties {
        // The certificate used by sonar.chkpnt.de is issued by Let's Encrypt.
        // Be aware: The corresponding Root CA is not trusted by default by Oracle's JRE
        // Nevertheless, the CA is included in TrustStore used by the JVM under Debian,
        // hence Travis-CI shouldn't throw any exceptions, see [1].
        // [1] https://travis-ci.org/chkpnt/spielwiese-travis-ci/builds/118969521#L346-L347
        property "sonar.host.url", "https://sonar.chkpnt.de"
        property "sonar.login", project.sonarqubeToken
        
        // Default is project.compileJava.options.encoding, which I'm not setting,
        // as this is a Groovy project
        property "sonar.sourceEncoding", "UTF-8"
        property "sonar.scm.disabled", "true"

        property "sonar.coverage.jacoco.xmlReportPaths", jacocoTestReport.reports.xml.destination
    }
}

/*********************************
 * Sonargraph
 *********************************/
setToDefaultIfNotExists('sonargraphActivationCode', '')

sonargraphDynamicReport {
    activationCode = project.sonargraphActivationCode
    prepareForSonarQube = true
    reportType = "full"
    reportFormat = "xml, html"
    qualityModelFile = "Sonargraph:Java.sgqm" //default Java quality model
    reportFileName = "sonargraph"
    failSet	{
        failOnEmptyWorkspace = true
    }
}

// Unfortunately, sonargraphDynamicReport.reportDirectory returns
// not the default value but null if not set explicitly :-/
task prepareSonargraphReportForGhPages(type: Copy) {
    from "$buildDir/sonargraph"
    into "${gitPublish.groomingDir}/reports"
    exclude '*.xml'
}

tasks["sonargraphDynamicReport"].finalizedBy(prepareSonargraphReportForGhPages)
